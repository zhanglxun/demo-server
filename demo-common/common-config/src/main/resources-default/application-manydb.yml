mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
#druid连接池的相关配置
spring:
  #排除 Druid自动配置
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  datasource:
    # 指定使用 Druid 数据源
    type: com.alibaba.druid.pool.DruidDataSource
    dynamic:
      primary: mysql
      datasource:
        mysql:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://${mysql.addr.url}?characterEncoding=utf8&verifyServerCertificate=false&useSSL=true&serverTimezone=Asia/Shanghai
          username: ${mysql.username}
          password: ${mysql.password}
        starrocks:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://${starRocks.addr.url}?characterEncoding=utf8&verifyServerCertificate=false&useSSL=true&serverTimezone=Asia/Shanghai
          username: ${starRocks.name}
          password: ${starRocks.password}
      #配置Druid连接池属性
      druid:
        # 初始连接数
        initialSize: 20
        # 最小连接池数量
        minIdle: 20
        # 最大连接池数量
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        use-ping-method: false
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        # 配置一个连接在池中最大生存的时间，单位是毫秒
        maxEvictableIdleTimeMillis: 900000
        # 配置检测连接是否有效
        validationQuery: SELECT 1 FROM DUAL
        #检测连接的超时时间
        validation-query-timeout: 10000
        #申请连接时会执行validation-query检测连接是否有效，开启会降低性能，默认为true
        test-on-borrow: false
        #归还连接时会执行validation-query检测连接是否有效，开启会降低信息，默认为true
        test-on-return: false
        #      web-stat-filter:
        #        enabled: true
        #配置后台监控系统
        stat-view-servlet:
          #是否开启，默认false
          enabled: true
          #后台监控系统用户名，默认不需要
          login-username: druid
          #后台监控系统密码，默认不需要
          login-password: druid
          #允许访问 - 白名单ip（逗号分隔）
          allow: 127.0.0.1
          #不允许访问 - 黑名单ip（逗号分隔）
          #deny:
        #开启web端监控
        web-stat-filter:
          #开启web监控
          enabled: true
          url-pattern: /*
          #开启session监控
          session-stat-enable: true
          #session监控的最大数量 - 默认1000
          session-stat-max-count: 100
          #开启profile-enbale，能够监控单个url的sql列表
          profile-enable: true
          #排除一些不必要的url
          exclusions: /druid/*
          #配置session中标识session身份的属性值，用于告诉druid，session的拥有者姓名
          #principal-session-name:
          #如果用户信息保存在cookie中，则可以通过这个属性配置，告诉druid当前用户是谁
          #principal-cookie-name:
        filter:
          stat:
            #开启SQL相关统计监控
            enabled: true
            #数据类型
            db-type: mysql
            #是否开启慢sql监控
            log-slow-sql: true
            #慢sql的阈值
            slow-sql-millis: 1000
            #是否合并sql统计（将不同参数的同一条sql语句合并在一起统计）
            merge-sql: off
            #统计连接的堆栈追踪数据
            connection-stack-trace-enable: true
          wall:
            #开启防火墙相关配置
            enabled: true
            #数据库类型
            db-type: mysql
            config:
              #是否允许执行select *这种sql语句
              select-all-column-allow: true
              #是否检查SQL语句中where的第一个条件是否永真
              select-where-alway-true-check: true
              #是否检查SQL语句中having的第一个条件是否永真
              select-having-alway-true-check: true
              #配置最大返回行数，如果select语句没有指定最大返回行数，会自动修改select添加返回限制
              select-limit: 1000
              #是否允许执行insert语句
              insert-allow: true
              #限制insert values的大小
              insert-values-check-size: 1000
              #是否检查insert values语法
              complete-insert-values-check: true
              #是否允许delete语句
              delete-allow: true
              #是否检查没有where条件的delete语句
              delete-where-none-check: true
              #是否允许update语句
              update-allow: true
              #是否检查没有where条件的update语句
              update-where-none-check: true